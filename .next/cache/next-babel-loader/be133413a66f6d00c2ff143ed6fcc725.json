{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React from 'react';\nimport { Layout } from 'antd';\n/** @jsx jsx */\n\nimport { Row, Col } from 'antd';\nimport { jsx, css } from '@emotion/core';\nvar Content = Layout.Content;\nvar content = true ? {\n  name: \"ta1vq0-components-Work-content\",\n  styles: \"padding:8rem 1.5rem 13rem;border-bottom:1px solid #e6ecf8;h1{font-size:28px;font-weight:600;margin-bottom:1.5rem;}p{font-size:17px;font-weight:300;margin-bottom:1.5rem;}a{color:#ff7e57;&:hover{font-weight:500;}};label:components-Work-content;\"\n} : {\n  name: \"ta1vq0-components-Work-content\",\n  styles: \"padding:8rem 1.5rem 13rem;border-bottom:1px solid #e6ecf8;h1{font-size:28px;font-weight:600;margin-bottom:1.5rem;}p{font-size:17px;font-weight:300;margin-bottom:1.5rem;}a{color:#ff7e57;&:hover{font-weight:500;}};label:components-Work-content;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar workContent = true ? {\n  name: \"1kb7jw5-components-Work-workContent\",\n  styles: \"margin:0 auto;max-width:1200px;padding:8rem 0.4rem;.img{max-width:350px;min-height:250px;background:url(/img/con1.png) no-repeat;border-radius:20px;&:hover{.txt{color:#ffffff;opacity:0.9;cursor:pointer;background-color:#ff7e57;transition:all 0.3s;position:absolute;border-radius:20px;width:100%;height:250px;margin:auto;position:relative;}}}.txt{color:#ffffff;background:#00000;opacity:0;}h2{padding-top:70px;color:#ffffff;}span{color:#ffffff;};label:components-Work-workContent;\"\n} : {\n  name: \"1kb7jw5-components-Work-workContent\",\n  styles: \"margin:0 auto;max-width:1200px;padding:8rem 0.4rem;.img{max-width:350px;min-height:250px;background:url(/img/con1.png) no-repeat;border-radius:20px;&:hover{.txt{color:#ffffff;opacity:0.9;cursor:pointer;background-color:#ff7e57;transition:all 0.3s;position:absolute;border-radius:20px;width:100%;height:250px;margin:auto;position:relative;}}}.txt{color:#ffffff;background:#00000;opacity:0;}h2{padding-top:70px;color:#ffffff;}span{color:#ffffff;};label:components-Work-workContent;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar onClickimg = function onClickimg(e) {\n  //alert(\"add!\")\n  location.href = url;\n};\n\nvar Work = function Work() {\n  var items = [{\n    title: 'D.aid 서비스',\n    subtitle: '기획 및 소개서/매뉴얼 제작',\n    cont: 'HTML / CSS / Javascript / Vue',\n    image: '01.png',\n    url: 'https://drive.google.com/file/d/12H8ONTRvwKPPzq8CTwDWfOpyUZTOaA0z/view?usp=sharing'\n  }, {\n    title: '옐로우버스 서비스',\n    subtitle: '프론트엔드 개발',\n    cont: 'HTML / Sass / React / Bootstrap',\n    image: '05.png',\n    url: 'https://drive.google.com/file/d/1OArp7tiz1N_x1d8YdTPf40sJFiCB9dWq/view?usp=sharing'\n  }, {\n    title: '다독다독 앱 서비스',\n    subtitle: '퍼소나 분석 및 기획서 제작',\n    cont: '개인 프로젝트',\n    image: '02.png',\n    url: 'https://drive.google.com/file/d/1LIYl_tUPhT0gVSyPDUJAlwpQMNuIrPmK/view?usp=sharing'\n  }, {\n    title: '네이버페이 기능 개선안',\n    subtitle: '개선안 기획서 제작',\n    cont: '개인 프로젝트',\n    image: '03.png',\n    url: 'https://drive.google.com/file/d/1utqaEpNKZ8wzXaJ9WbnAaEEuhEWGcdH3/view?usp=sharing'\n  }, {\n    title: '상담톡 플로우 정리',\n    subtitle: '챗봇 플로우 정리',\n    cont: '인턴 프로젝트',\n    image: '04.png',\n    url: 'https://drive.google.com/file/d/1KussC4EDzLW38yYF2eXmEwDBlh3DKyhT/view?usp=sharing'\n  }];\n  return jsx(React.Fragment, null, jsx(Content, {\n    css: content\n  }, jsx(\"div\", null, jsx(\"h1\", null, \"My Recent Work\"), jsx(\"p\", null, \"\\uC791\\uC5C5\\uD55C \\uBA87 \\uAC00\\uC9C0 \\uD504\\uB85C\\uC81D\\uD2B8\\uB4E4\\uC774 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uB354 \\uAD81\\uAE08\\uD558\\uC2E0 \\uC810\\uC774 \\uC788\\uB098\\uC694?\", jsx(\"a\", {\n    href: \"mailto:kmhayeon12@gmail.com\",\n    title: \"\\uBB38\\uC758 \\uBA54\\uC77C \\uBCF4\\uB0B4\\uAE30\"\n  }, \"\\xA0Email me.\"))), jsx(\"div\", null, jsx(Row, null, items.map(function (item, idx) {\n    return jsx(\"div\", {\n      className: \"site-card-wrapper\",\n      css: workContent,\n      key: idx\n    }, jsx(Col, {\n      flex: 12\n    }, jsx(\"div\", {\n      className: \"img\",\n      onClick: function onClick(e) {\n        return onClickimg(item.url);\n      }\n    }, jsx(\"div\", {\n      className: \"txt\"\n    }, jsx(\"h2\", null, \" \", item.title, \" \"), jsx(\"span\", null, item.subtitle, jsx(\"br\", null), item.cont)))));\n  })))));\n};\n\nexport default Work;","map":null,"metadata":{},"sourceType":"module"}